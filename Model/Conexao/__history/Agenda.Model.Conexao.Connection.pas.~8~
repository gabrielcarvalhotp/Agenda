unit Agenda.Model.Conexao.Connection;

interface

uses
  Data.DB,
  Firedac.Comp.Client,
  Firedac.Phys.FB,
  Firedac.Comp.UI,
  Firedac.Stan.Intf,
  Firedac.Stan.Option,
  Firedac.Stan.Error,
  Firedac.UI.Intf,
  Firedac.Phys.Intf,
  Firedac.Stan.Def,
  Firedac.Stan.Pool,
  Firedac.Stan.Async,
  Firedac.Phys,
  Firedac.Phys.FBDef,
  Firedac.VCLUI.Wait,
  Firedac.Phys.IBBase,
  Firedac.DApt,
  System.Classes,
  Agenda.Model.Conexao.Interfaces;

type
  TModelConexaoConnection = class(TInterfacedObject, iModelConexaoInterfacesConnection)
  private
    { private }
    FConnection: TFDConnection;
    FParametros: iModelConexaoInterfacesParametros;
    FDPhysFBDriverLink1: TFDPhysFBDriverLink;
    FDGUIxWaitCursor1: TFDGUIxWaitCursor;
  public
    { public }
    constructor Create;
    destructor Destroy; override;
    class function New: iModelConexaoInterfacesConnection;
    function paramentros: iModelConexaoInterfacesParametros;
    function Conexao: TFDCustomConnection;
    function Conectar: iModelConexaoInterfacesConnection;
  end;

implementation

//uses Clinica.Model.Conexao.Parametros;

{ TModelConexaoConnection }

function TModelConexaoConnection.Conectar: iModelConexaoInterfacesConnection;
begin
  result := self;
  FConnection.DriverName := FParametros.DriverId;
  FConnection.Params.Database := FParametros.Database;
  FConnection.Params.UserName := FParametros.UserName;
  FConnection.Params.Password := FParametros.Password;
  FConnection.Params.Add('Server=' + FParametros.Server);
  FConnection.Params.Add('Port=' + FParametros.Porta);
  FConnection.LoginPrompt := false;
  FConnection.Connected := True;
end;

function TModelConexaoConnection.Conexao: TFDCustomConnection;
begin
  result := FConnection;
end;

constructor TModelConexaoConnection.Create;
begin
  FConnection := TFDConnection.Create(nil);
  FParametros := TModelConexaoParametros.New(self);
  FDPhysFBDriverLink1 := TFDPhysFBDriverLink.Create(nil);
  FDGUIxWaitCursor1 := TFDGUIxWaitCursor.Create(nil);
end;

destructor TModelConexaoConnection.Destroy;
begin
  inherited;
  FConnection.DisposeOf;
  FDPhysFBDriverLink1.DisposeOf;
  FDGUIxWaitCursor1.DisposeOf;
end;

class function TModelConexaoConnection.New: iModelConexaoInterfacesConnection;
begin
  result := self.Create;
end;

function TModelConexaoConnection.paramentros: iModelConexaoInterfacesParametros;
begin
  result := FParametros;
end;

end.
